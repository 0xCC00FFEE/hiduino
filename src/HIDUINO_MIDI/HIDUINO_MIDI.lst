   1               		.file	"HIDUINO_MIDI.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.text
  11               	.Ltext0:
  12               		.cfi_sections	.debug_frame
  13               		.section	.text.LEDs_SetAllLEDs,"ax",@progbits
  15               	LEDs_SetAllLEDs:
  16               	.LFB84:
  17               		.file 1 "./Board/LEDs.h"
   1:./Board/LEDs.h **** /*
   2:./Board/LEDs.h ****              LUFA Library
   3:./Board/LEDs.h ****      Copyright (C) Dean Camera, 2010.
   4:./Board/LEDs.h ****               
   5:./Board/LEDs.h ****   dean [at] fourwalledcubicle [dot] com
   6:./Board/LEDs.h ****       www.fourwalledcubicle.com
   7:./Board/LEDs.h **** */
   8:./Board/LEDs.h **** 
   9:./Board/LEDs.h **** /*
  10:./Board/LEDs.h ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./Board/LEDs.h **** 
  12:./Board/LEDs.h ****   Permission to use, copy, modify, distribute, and sell this 
  13:./Board/LEDs.h ****   software and its documentation for any purpose is hereby granted
  14:./Board/LEDs.h ****   without fee, provided that the above copyright notice appear in 
  15:./Board/LEDs.h ****   all copies and that both that the copyright notice and this
  16:./Board/LEDs.h ****   permission notice and warranty disclaimer appear in supporting 
  17:./Board/LEDs.h ****   documentation, and that the name of the author not be used in 
  18:./Board/LEDs.h ****   advertising or publicity pertaining to distribution of the 
  19:./Board/LEDs.h ****   software without specific, written prior permission.
  20:./Board/LEDs.h **** 
  21:./Board/LEDs.h ****   The author disclaim all warranties with regard to this
  22:./Board/LEDs.h ****   software, including all implied warranties of merchantability
  23:./Board/LEDs.h ****   and fitness.  In no event shall the author be liable for any
  24:./Board/LEDs.h ****   special, indirect or consequential damages or any damages
  25:./Board/LEDs.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./Board/LEDs.h ****   in an action of contract, negligence or other tortious action,
  27:./Board/LEDs.h ****   arising out of or in connection with the use or performance of
  28:./Board/LEDs.h ****   this software.
  29:./Board/LEDs.h **** */
  30:./Board/LEDs.h **** 
  31:./Board/LEDs.h **** /*
  32:./Board/LEDs.h ****    Board LEDs driver for the Benito board, from www.dorkbotpdx.org.
  33:./Board/LEDs.h **** */
  34:./Board/LEDs.h **** 
  35:./Board/LEDs.h **** #ifndef __LEDS_ARDUINOUNO_H__
  36:./Board/LEDs.h **** #define __LEDS_ARDUINOUNO_H__
  37:./Board/LEDs.h **** 
  38:./Board/LEDs.h **** 	/* Includes: */
  39:./Board/LEDs.h **** 		#include <avr/io.h>
  40:./Board/LEDs.h **** 
  41:./Board/LEDs.h **** /* Enable C linkage for C++ Compilers: */
  42:./Board/LEDs.h **** 		#if defined(__cplusplus)
  43:./Board/LEDs.h **** 			extern "C" {
  44:./Board/LEDs.h **** 		#endif
  45:./Board/LEDs.h **** 
  46:./Board/LEDs.h **** 	/* Preprocessor Checks: */
  47:./Board/LEDs.h **** 		#if !defined(INCLUDE_FROM_LEDS_H)
  48:./Board/LEDs.h **** 			#error Do not include this file directly. Include LUFA/Drivers/Board/LEDS.h instead.
  49:./Board/LEDs.h **** 		#endif
  50:./Board/LEDs.h **** 
  51:./Board/LEDs.h **** 	/* Public Interface - May be used in end-application: */
  52:./Board/LEDs.h **** 		/* Macros: */
  53:./Board/LEDs.h **** 			/** LED mask for the first LED on the board. */
  54:./Board/LEDs.h **** 			#define LEDS_LED1        (1 << 5)
  55:./Board/LEDs.h **** 
  56:./Board/LEDs.h **** 			/** LED mask for the second LED on the board. */
  57:./Board/LEDs.h **** 			#define LEDS_LED2        (1 << 4)
  58:./Board/LEDs.h **** 
  59:./Board/LEDs.h **** 			/** LED mask for all the LEDs on the board. */
  60:./Board/LEDs.h **** 			#define LEDS_ALL_LEDS    (LEDS_LED1 | LEDS_LED2)
  61:./Board/LEDs.h **** 
  62:./Board/LEDs.h **** 			/** LED mask for the none of the board LEDs */
  63:./Board/LEDs.h **** 			#define LEDS_NO_LEDS     0
  64:./Board/LEDs.h **** 
  65:./Board/LEDs.h **** 		/* Inline Functions: */
  66:./Board/LEDs.h **** 		#if !defined(__DOXYGEN__)
  67:./Board/LEDs.h **** 			static inline void LEDs_Init(void)
  68:./Board/LEDs.h **** 			{
  69:./Board/LEDs.h **** 				DDRD  |= LEDS_ALL_LEDS;
  70:./Board/LEDs.h **** 				PORTD |= LEDS_ALL_LEDS;
  71:./Board/LEDs.h **** 			}
  72:./Board/LEDs.h **** 			
  73:./Board/LEDs.h **** 			static inline void LEDs_TurnOnLEDs(const uint8_t LEDMask)
  74:./Board/LEDs.h **** 			{
  75:./Board/LEDs.h **** 				PORTD &= ~LEDMask;
  76:./Board/LEDs.h **** 			}
  77:./Board/LEDs.h **** 
  78:./Board/LEDs.h **** 			static inline void LEDs_TurnOffLEDs(const uint8_t LEDMask)
  79:./Board/LEDs.h **** 			{
  80:./Board/LEDs.h **** 				PORTD |= LEDMask;
  81:./Board/LEDs.h **** 			}
  82:./Board/LEDs.h **** 
  83:./Board/LEDs.h **** 			static inline void LEDs_SetAllLEDs(const uint8_t LEDMask)
  84:./Board/LEDs.h **** 			{
  18               		.loc 1 84 0
  19               		.cfi_startproc
  20               	.LVL0:
  21               	/* prologue: function */
  22               	/* frame size = 0 */
  23               	/* stack size = 0 */
  24               	.L__stack_usage = 0
  85:./Board/LEDs.h **** 				PORTD = ((PORTD | LEDS_ALL_LEDS) & ~LEDMask);
  25               		.loc 1 85 0
  26 0000 9BB1      		in r25,43-32
  27 0002 8095      		com r24
  28               	.LVL1:
  29 0004 9063      		ori r25,lo8(48)
  30 0006 8923      		and r24,r25
  31               	.LVL2:
  32 0008 8BB9      		out 43-32,r24
  33               	/* epilogue start */
  86:./Board/LEDs.h **** 			}
  34               		.loc 1 86 0
  35 000a 0895      		ret
  36               		.cfi_endproc
  37               	.LFE84:
  39               		.section	.text.SetupHardware,"ax",@progbits
  40               	.global	SetupHardware
  42               	SetupHardware:
  43               	.LFB94:
  44               		.file 2 "HIDUINO_MIDI.c"
   1:HIDUINO_MIDI.c **** /***********************************************************************
   2:HIDUINO_MIDI.c ****  *  HIDUINO_MIDI Firmware v1.5
   3:HIDUINO_MIDI.c ****  *  by Dimitri Diakopoulos (http://www.dimitridiakopoulos.com)
   4:HIDUINO_MIDI.c ****  *  Music Technology: Interaction, Intelligence & Design - October 2011
   5:HIDUINO_MIDI.c ****  *  http://mtiid.calarts.edu
   6:HIDUINO_MIDI.c ****  *  http://www.dimitridiakopoulos.com
   7:HIDUINO_MIDI.c ****  *  Based on the LUFA MIDI Demo by Dean Camera 
   8:HIDUINO_MIDI.c ****  * 		- http://www.fourwalledcubicle.com/LUFA.php
   9:HIDUINO_MIDI.c ****  ***********************************************************************/
  10:HIDUINO_MIDI.c **** 
  11:HIDUINO_MIDI.c **** #include "HIDUINO_MIDI.h"
  12:HIDUINO_MIDI.c **** 
  13:HIDUINO_MIDI.c **** MIDI_EventPacket_t MIDI_FROM_ARDUINO; 
  14:HIDUINO_MIDI.c **** 
  15:HIDUINO_MIDI.c **** // Counters to keep track of recieved bytes
  16:HIDUINO_MIDI.c **** volatile uint8_t dCount = 0;
  17:HIDUINO_MIDI.c **** volatile uint8_t complete = 0; 
  18:HIDUINO_MIDI.c **** 
  19:HIDUINO_MIDI.c **** uint8_t tx_ticks = 0; 
  20:HIDUINO_MIDI.c **** uint8_t rx_ticks = 0; 
  21:HIDUINO_MIDI.c **** 
  22:HIDUINO_MIDI.c **** USB_ClassInfo_MIDI_Device_t MIDI_Interface =
  23:HIDUINO_MIDI.c **** 	{
  24:HIDUINO_MIDI.c **** 		.Config =
  25:HIDUINO_MIDI.c **** 			{
  26:HIDUINO_MIDI.c **** 				.StreamingInterfaceNumber = 1,
  27:HIDUINO_MIDI.c **** 
  28:HIDUINO_MIDI.c **** 				.DataINEndpointNumber      = MIDI_STREAM_IN_EPNUM,
  29:HIDUINO_MIDI.c **** 				.DataINEndpointSize        = MIDI_STREAM_EPSIZE,
  30:HIDUINO_MIDI.c **** 				.DataINEndpointDoubleBank  = false,
  31:HIDUINO_MIDI.c **** 
  32:HIDUINO_MIDI.c **** 				.DataOUTEndpointNumber     = MIDI_STREAM_OUT_EPNUM,
  33:HIDUINO_MIDI.c **** 				.DataOUTEndpointSize       = MIDI_STREAM_EPSIZE,
  34:HIDUINO_MIDI.c **** 				.DataOUTEndpointDoubleBank = false,
  35:HIDUINO_MIDI.c **** 			},
  36:HIDUINO_MIDI.c **** 	};
  37:HIDUINO_MIDI.c **** 
  38:HIDUINO_MIDI.c **** 	
  39:HIDUINO_MIDI.c **** int main(void) {
  40:HIDUINO_MIDI.c **** 	
  41:HIDUINO_MIDI.c **** 	LEDs_TurnOffLEDs(LEDS_LED1);
  42:HIDUINO_MIDI.c **** 	LEDs_TurnOffLEDs(LEDS_LED2);
  43:HIDUINO_MIDI.c **** 	
  44:HIDUINO_MIDI.c **** 	SetupHardware();
  45:HIDUINO_MIDI.c **** 	
  46:HIDUINO_MIDI.c **** 	sei();
  47:HIDUINO_MIDI.c **** 	
  48:HIDUINO_MIDI.c **** 	for (;;) { 
  49:HIDUINO_MIDI.c **** 		
  50:HIDUINO_MIDI.c **** 		if (tx_ticks) 
  51:HIDUINO_MIDI.c **** 			tx_ticks--;
  52:HIDUINO_MIDI.c **** 		else if (tx_ticks == 0)
  53:HIDUINO_MIDI.c **** 			LEDs_TurnOffLEDs(LEDS_LED1);		
  54:HIDUINO_MIDI.c **** 							
  55:HIDUINO_MIDI.c **** 		if (rx_ticks) 
  56:HIDUINO_MIDI.c **** 			rx_ticks--;
  57:HIDUINO_MIDI.c **** 		else if (rx_ticks == 0)
  58:HIDUINO_MIDI.c **** 			LEDs_TurnOffLEDs(LEDS_LED2);
  59:HIDUINO_MIDI.c **** 		
  60:HIDUINO_MIDI.c **** 		MIDI_IN();
  61:HIDUINO_MIDI.c **** 		MIDI_OUT(); 
  62:HIDUINO_MIDI.c **** 
  63:HIDUINO_MIDI.c **** 		MIDI_Device_USBTask(&MIDI_Interface);
  64:HIDUINO_MIDI.c **** 		USB_USBTask();
  65:HIDUINO_MIDI.c **** 		
  66:HIDUINO_MIDI.c **** 	}
  67:HIDUINO_MIDI.c **** 	
  68:HIDUINO_MIDI.c **** }
  69:HIDUINO_MIDI.c **** 
  70:HIDUINO_MIDI.c **** 
  71:HIDUINO_MIDI.c **** // Configures the board hardware and chip peripherals for the demo's functionality.
  72:HIDUINO_MIDI.c **** void SetupHardware(void) {
  45               		.loc 2 72 0
  46               		.cfi_startproc
  47 0000 CF93      		push r28
  48               	.LCFI0:
  49               		.cfi_def_cfa_offset 3
  50               		.cfi_offset 28, -2
  51 0002 DF93      		push r29
  52               	.LCFI1:
  53               		.cfi_def_cfa_offset 4
  54               		.cfi_offset 29, -3
  55               	/* prologue: function */
  56               	/* frame size = 0 */
  57               	/* stack size = 2 */
  58               	.L__stack_usage = 2
  73:HIDUINO_MIDI.c **** 
  74:HIDUINO_MIDI.c **** 	// Disable watchdog if enabled by bootloader/fuses
  75:HIDUINO_MIDI.c **** 	MCUSR &= ~(1 << WDRF);
  59               		.loc 2 75 0
  60 0004 84B7      		in r24,84-32
  61 0006 877F      		andi r24,lo8(-9)
  62 0008 84BF      		out 84-32,r24
  76:HIDUINO_MIDI.c **** 	wdt_disable();
  63               		.loc 2 76 0
  64 000a 28E1      		ldi r18,lo8(24)
  65               	/* #APP */
  66               	 ;  76 "HIDUINO_MIDI.c" 1
  67 000c 0FB6      		in __tmp_reg__, __SREG__
  68 000e F894      		cli
  69 0010 2093 6000 		sts 96, r18
  70 0014 1092 6000 		sts 96, __zero_reg__
  71 0018 0FBE      		out __SREG__,__tmp_reg__
  72               		
  73               	 ;  0 "" 2
  74               	.LVL3:
  75               	/* #NOAPP */
  76               	.LBB27:
  77               	.LBB28:
  78               		.file 3 "../../LUFA/Drivers/Peripheral/Serial.h"
   1:../../LUFA/Drivers/Peripheral/Serial.h **** /*
   2:../../LUFA/Drivers/Peripheral/Serial.h ****              LUFA Library
   3:../../LUFA/Drivers/Peripheral/Serial.h ****      Copyright (C) Dean Camera, 2010.
   4:../../LUFA/Drivers/Peripheral/Serial.h **** 
   5:../../LUFA/Drivers/Peripheral/Serial.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../LUFA/Drivers/Peripheral/Serial.h ****            www.lufa-lib.org
   7:../../LUFA/Drivers/Peripheral/Serial.h **** */
   8:../../LUFA/Drivers/Peripheral/Serial.h **** 
   9:../../LUFA/Drivers/Peripheral/Serial.h **** /*
  10:../../LUFA/Drivers/Peripheral/Serial.h ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../LUFA/Drivers/Peripheral/Serial.h **** 
  12:../../LUFA/Drivers/Peripheral/Serial.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../LUFA/Drivers/Peripheral/Serial.h ****   software and its documentation for any purpose is hereby granted
  14:../../LUFA/Drivers/Peripheral/Serial.h ****   without fee, provided that the above copyright notice appear in
  15:../../LUFA/Drivers/Peripheral/Serial.h ****   all copies and that both that the copyright notice and this
  16:../../LUFA/Drivers/Peripheral/Serial.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../LUFA/Drivers/Peripheral/Serial.h ****   documentation, and that the name of the author not be used in
  18:../../LUFA/Drivers/Peripheral/Serial.h ****   advertising or publicity pertaining to distribution of the
  19:../../LUFA/Drivers/Peripheral/Serial.h ****   software without specific, written prior permission.
  20:../../LUFA/Drivers/Peripheral/Serial.h **** 
  21:../../LUFA/Drivers/Peripheral/Serial.h ****   The author disclaim all warranties with regard to this
  22:../../LUFA/Drivers/Peripheral/Serial.h ****   software, including all implied warranties of merchantability
  23:../../LUFA/Drivers/Peripheral/Serial.h ****   and fitness.  In no event shall the author be liable for any
  24:../../LUFA/Drivers/Peripheral/Serial.h ****   special, indirect or consequential damages or any damages
  25:../../LUFA/Drivers/Peripheral/Serial.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../LUFA/Drivers/Peripheral/Serial.h ****   in an action of contract, negligence or other tortious action,
  27:../../LUFA/Drivers/Peripheral/Serial.h ****   arising out of or in connection with the use or performance of
  28:../../LUFA/Drivers/Peripheral/Serial.h ****   this software.
  29:../../LUFA/Drivers/Peripheral/Serial.h **** */
  30:../../LUFA/Drivers/Peripheral/Serial.h **** 
  31:../../LUFA/Drivers/Peripheral/Serial.h **** /** \file
  32:../../LUFA/Drivers/Peripheral/Serial.h ****  *  \brief Master include file for the USART peripheral driver.
  33:../../LUFA/Drivers/Peripheral/Serial.h ****  *
  34:../../LUFA/Drivers/Peripheral/Serial.h ****  *  Driver for the USART subsystem on supported USB AVRs.
  35:../../LUFA/Drivers/Peripheral/Serial.h ****  */
  36:../../LUFA/Drivers/Peripheral/Serial.h **** 
  37:../../LUFA/Drivers/Peripheral/Serial.h **** /** \ingroup Group_PeripheralDrivers
  38:../../LUFA/Drivers/Peripheral/Serial.h ****  *  @defgroup Group_Serial Serial USART Driver - LUFA/Drivers/Peripheral/Serial.h
  39:../../LUFA/Drivers/Peripheral/Serial.h ****  *
  40:../../LUFA/Drivers/Peripheral/Serial.h ****  *  \section Sec_Dependencies Module Source Dependencies
  41:../../LUFA/Drivers/Peripheral/Serial.h ****  *  The following files must be built with any user project that uses this module:
  42:../../LUFA/Drivers/Peripheral/Serial.h ****  *    - LUFA/Drivers/Peripheral/Serial.c <i>(Makefile source module name: LUFA_SRC_SERIAL)</i>
  43:../../LUFA/Drivers/Peripheral/Serial.h ****  *
  44:../../LUFA/Drivers/Peripheral/Serial.h ****  *  \section Module Description
  45:../../LUFA/Drivers/Peripheral/Serial.h ****  *  Hardware serial USART driver. This module provides an easy to use driver for
  46:../../LUFA/Drivers/Peripheral/Serial.h ****  *  the setup of and transfer of data over the AVR's USART port.
  47:../../LUFA/Drivers/Peripheral/Serial.h ****  *
  48:../../LUFA/Drivers/Peripheral/Serial.h ****  *  @{
  49:../../LUFA/Drivers/Peripheral/Serial.h ****  */
  50:../../LUFA/Drivers/Peripheral/Serial.h **** 
  51:../../LUFA/Drivers/Peripheral/Serial.h **** #ifndef __SERIAL_H__
  52:../../LUFA/Drivers/Peripheral/Serial.h **** #define __SERIAL_H__
  53:../../LUFA/Drivers/Peripheral/Serial.h **** 
  54:../../LUFA/Drivers/Peripheral/Serial.h **** 	/* Includes: */
  55:../../LUFA/Drivers/Peripheral/Serial.h **** 		#include <avr/io.h>
  56:../../LUFA/Drivers/Peripheral/Serial.h **** 		#include <avr/pgmspace.h>
  57:../../LUFA/Drivers/Peripheral/Serial.h **** 		#include <stdbool.h>
  58:../../LUFA/Drivers/Peripheral/Serial.h **** 
  59:../../LUFA/Drivers/Peripheral/Serial.h **** 		#include "../../Common/Common.h"
  60:../../LUFA/Drivers/Peripheral/Serial.h **** 		#include "../Misc/TerminalCodes.h"
  61:../../LUFA/Drivers/Peripheral/Serial.h **** 
  62:../../LUFA/Drivers/Peripheral/Serial.h **** 	/* Enable C linkage for C++ Compilers: */
  63:../../LUFA/Drivers/Peripheral/Serial.h **** 		#if defined(__cplusplus)
  64:../../LUFA/Drivers/Peripheral/Serial.h **** 			extern "C" {
  65:../../LUFA/Drivers/Peripheral/Serial.h **** 		#endif
  66:../../LUFA/Drivers/Peripheral/Serial.h **** 
  67:../../LUFA/Drivers/Peripheral/Serial.h **** 	/* Public Interface - May be used in end-application: */
  68:../../LUFA/Drivers/Peripheral/Serial.h **** 		/* Macros: */
  69:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Macro for calculating the baud value from a given baud rate when the U2X (double speed) bit 
  70:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  not set.
  71:../../LUFA/Drivers/Peripheral/Serial.h **** 			 */
  72:../../LUFA/Drivers/Peripheral/Serial.h **** 			#define SERIAL_UBBRVAL(baud)    ((((F_CPU / 16) + (baud / 2)) / (baud)) - 1)
  73:../../LUFA/Drivers/Peripheral/Serial.h **** 
  74:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Macro for calculating the baud value from a given baud rate when the U2X (double speed) bit 
  75:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  set.
  76:../../LUFA/Drivers/Peripheral/Serial.h **** 			 */
  77:../../LUFA/Drivers/Peripheral/Serial.h **** 			#define SERIAL_2X_UBBRVAL(baud) ((((F_CPU / 8) + (baud / 2)) / (baud)) - 1)
  78:../../LUFA/Drivers/Peripheral/Serial.h **** 
  79:../../LUFA/Drivers/Peripheral/Serial.h **** 		/* Function Prototypes: */
  80:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Transmits a given string located in program space (FLASH) through the USART.
  81:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *
  82:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  \param[in] FlashStringPtr  Pointer to a string located in program space.
  83:../../LUFA/Drivers/Peripheral/Serial.h **** 			 */
  84:../../LUFA/Drivers/Peripheral/Serial.h **** 			void Serial_TxString_P(const char* FlashStringPtr) ATTR_NON_NULL_PTR_ARG(1);
  85:../../LUFA/Drivers/Peripheral/Serial.h **** 
  86:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Transmits a given string located in SRAM memory through the USART.
  87:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *
  88:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  \param[in] StringPtr  Pointer to a string located in SRAM space.
  89:../../LUFA/Drivers/Peripheral/Serial.h **** 			 */
  90:../../LUFA/Drivers/Peripheral/Serial.h **** 			void Serial_TxString(const char* StringPtr) ATTR_NON_NULL_PTR_ARG(1);
  91:../../LUFA/Drivers/Peripheral/Serial.h **** 
  92:../../LUFA/Drivers/Peripheral/Serial.h **** 		/* Inline Functions: */
  93:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Initializes the USART, ready for serial data transmission and reception. This initializes th
  94:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  standard 8-bit, no parity, 1 stop bit settings suitable for most applications.
  95:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *
  96:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  \param[in] BaudRate     Serial baud rate, in bits per second.
  97:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  \param[in] DoubleSpeed  Enables double speed mode when set, halving the sample time to doubl
  98:../../LUFA/Drivers/Peripheral/Serial.h **** 			 */
  99:../../LUFA/Drivers/Peripheral/Serial.h **** 			static inline void Serial_Init(const uint32_t BaudRate,
 100:../../LUFA/Drivers/Peripheral/Serial.h **** 			                               const bool DoubleSpeed)
 101:../../LUFA/Drivers/Peripheral/Serial.h **** 			{
 102:../../LUFA/Drivers/Peripheral/Serial.h **** 				UBRR1  = (DoubleSpeed ? SERIAL_2X_UBBRVAL(BaudRate) : SERIAL_UBBRVAL(BaudRate));
  79               		.loc 3 102 0
  80 001a 8FE1      		ldi r24,lo8(31)
  81 001c 90E0      		ldi r25,hi8(31)
  82 001e 9093 CD00 		sts 204+1,r25
  83 0022 8093 CC00 		sts 204,r24
 103:../../LUFA/Drivers/Peripheral/Serial.h **** 
 104:../../LUFA/Drivers/Peripheral/Serial.h **** 				UCSR1C = ((1 << UCSZ11) | (1 << UCSZ10));
  84               		.loc 3 104 0
  85 0026 86E0      		ldi r24,lo8(6)
  86 0028 8093 CA00 		sts 202,r24
 105:../../LUFA/Drivers/Peripheral/Serial.h **** 				UCSR1A = (DoubleSpeed ? (1 << U2X1) : 0);
  87               		.loc 3 105 0
  88 002c 1092 C800 		sts 200,__zero_reg__
 106:../../LUFA/Drivers/Peripheral/Serial.h **** 				UCSR1B = ((1 << TXEN1)  | (1 << RXEN1));
  89               		.loc 3 106 0
  90 0030 C9EC      		ldi r28,lo8(201)
  91 0032 D0E0      		ldi r29,hi8(201)
  92 0034 2883      		st Y,r18
 107:../../LUFA/Drivers/Peripheral/Serial.h **** 
 108:../../LUFA/Drivers/Peripheral/Serial.h **** 				DDRD  |= (1 << 3);
  93               		.loc 3 108 0
  94 0036 539A      		sbi 42-32,3
 109:../../LUFA/Drivers/Peripheral/Serial.h **** 				PORTD |= (1 << 2);
  95               		.loc 3 109 0
  96 0038 5A9A      		sbi 43-32,2
  97               	.LBE28:
  98               	.LBE27:
  99               	.LBB29:
 100               	.LBB30:
  69:./Board/LEDs.h **** 				DDRD  |= LEDS_ALL_LEDS;
 101               		.loc 1 69 0
 102 003a 8AB1      		in r24,42-32
 103 003c 8063      		ori r24,lo8(48)
 104 003e 8AB9      		out 42-32,r24
  70:./Board/LEDs.h **** 				PORTD |= LEDS_ALL_LEDS;
 105               		.loc 1 70 0
 106 0040 8BB1      		in r24,43-32
 107 0042 8063      		ori r24,lo8(48)
 108 0044 8BB9      		out 43-32,r24
 109               	.LBE30:
 110               	.LBE29:
  77:HIDUINO_MIDI.c **** 	
  78:HIDUINO_MIDI.c **** 	// Hardware Initialization  
  79:HIDUINO_MIDI.c **** 	Serial_Init(31250, false);
  80:HIDUINO_MIDI.c **** 	
  81:HIDUINO_MIDI.c **** 	LEDs_Init();
  82:HIDUINO_MIDI.c **** 	USB_Init();
 111               		.loc 2 82 0
 112 0046 0E94 0000 		call USB_Init
  83:HIDUINO_MIDI.c **** 	
  84:HIDUINO_MIDI.c **** 	// Start the flush timer so that overflows occur rapidly to push received bytes to the USB interfa
  85:HIDUINO_MIDI.c **** 	TCCR0B = (1 << CS02);
 113               		.loc 2 85 0
 114 004a 84E0      		ldi r24,lo8(4)
 115 004c 85BD      		out 69-32,r24
  86:HIDUINO_MIDI.c **** 			
  87:HIDUINO_MIDI.c **** 	// Serial Interrupts
  88:HIDUINO_MIDI.c **** 	UCSR1B = 0;
 116               		.loc 2 88 0
 117 004e 1882      		st Y,__zero_reg__
  89:HIDUINO_MIDI.c **** 	UCSR1B = ((1 << RXCIE1) | (1 << TXEN1) | (1 << RXEN1));
 118               		.loc 2 89 0
 119 0050 88E9      		ldi r24,lo8(-104)
 120 0052 8883      		st Y,r24
 121               	/* epilogue start */
  90:HIDUINO_MIDI.c **** 	
  91:HIDUINO_MIDI.c **** }
 122               		.loc 2 91 0
 123 0054 DF91      		pop r29
 124 0056 CF91      		pop r28
 125 0058 0895      		ret
 126               		.cfi_endproc
 127               	.LFE94:
 129               		.section	.text.EVENT_USB_Device_Connect,"ax",@progbits
 130               	.global	EVENT_USB_Device_Connect
 132               	EVENT_USB_Device_Connect:
 133               	.LFB95:
  92:HIDUINO_MIDI.c **** 
  93:HIDUINO_MIDI.c **** 
  94:HIDUINO_MIDI.c **** // Event handler for the library USB Connection event. */
  95:HIDUINO_MIDI.c **** void EVENT_USB_Device_Connect(void) {
 134               		.loc 2 95 0
 135               		.cfi_startproc
 136               	/* prologue: function */
 137               	/* frame size = 0 */
 138               	/* stack size = 0 */
 139               	.L__stack_usage = 0
  96:HIDUINO_MIDI.c **** 	LEDs_SetAllLEDs(LEDMASK_USB_ENUMERATING);
 140               		.loc 2 96 0
 141 0000 80E1      		ldi r24,lo8(16)
 142 0002 0E94 0000 		call LEDs_SetAllLEDs
 143               	/* epilogue start */
  97:HIDUINO_MIDI.c **** }
 144               		.loc 2 97 0
 145 0006 0895      		ret
 146               		.cfi_endproc
 147               	.LFE95:
 149               		.section	.text.EVENT_USB_Device_Disconnect,"ax",@progbits
 150               	.global	EVENT_USB_Device_Disconnect
 152               	EVENT_USB_Device_Disconnect:
 153               	.LFB96:
  98:HIDUINO_MIDI.c **** 
  99:HIDUINO_MIDI.c **** // Event handler for the library USB Disconnection event. */
 100:HIDUINO_MIDI.c **** void EVENT_USB_Device_Disconnect(void) {
 154               		.loc 2 100 0
 155               		.cfi_startproc
 156               	/* prologue: function */
 157               	/* frame size = 0 */
 158               	/* stack size = 0 */
 159               	.L__stack_usage = 0
 101:HIDUINO_MIDI.c **** 	LEDs_SetAllLEDs(LEDMASK_USB_NOTREADY);
 160               		.loc 2 101 0
 161 0000 80E2      		ldi r24,lo8(32)
 162 0002 0E94 0000 		call LEDs_SetAllLEDs
 163               	/* epilogue start */
 102:HIDUINO_MIDI.c **** }
 164               		.loc 2 102 0
 165 0006 0895      		ret
 166               		.cfi_endproc
 167               	.LFE96:
 169               		.section	.text.EVENT_USB_Device_ConfigurationChanged,"ax",@progbits
 170               	.global	EVENT_USB_Device_ConfigurationChanged
 172               	EVENT_USB_Device_ConfigurationChanged:
 173               	.LFB97:
 103:HIDUINO_MIDI.c **** 
 104:HIDUINO_MIDI.c **** // Event handler for the library USB Configuration Changed event. */
 105:HIDUINO_MIDI.c **** void EVENT_USB_Device_ConfigurationChanged(void) {
 174               		.loc 2 105 0
 175               		.cfi_startproc
 176               	/* prologue: function */
 177               	/* frame size = 0 */
 178               	/* stack size = 0 */
 179               	.L__stack_usage = 0
 180               	.LVL4:
 106:HIDUINO_MIDI.c **** 	bool ConfigSuccess = true;
 107:HIDUINO_MIDI.c **** 	ConfigSuccess &= MIDI_Device_ConfigureEndpoints(&MIDI_Interface);
 181               		.loc 2 107 0
 182 0000 80E0      		ldi r24,lo8(MIDI_Interface)
 183 0002 90E0      		ldi r25,hi8(MIDI_Interface)
 184 0004 0E94 0000 		call MIDI_Device_ConfigureEndpoints
 185               	.LVL5:
 108:HIDUINO_MIDI.c **** 	LEDs_SetAllLEDs(ConfigSuccess ? LEDMASK_USB_READY : LEDMASK_USB_ERROR);
 186               		.loc 2 108 0
 187 0008 8823      		tst r24
 188 000a 01F0      		breq .L7
 189 000c 80E1      		ldi r24,lo8(16)
 190               	.LVL6:
 191 000e 00C0      		rjmp .L6
 192               	.LVL7:
 193               	.L7:
 194 0010 80E2      		ldi r24,lo8(32)
 195               	.LVL8:
 196               	.L6:
 197               		.loc 2 108 0 is_stmt 0 discriminator 3
 198 0012 0E94 0000 		call LEDs_SetAllLEDs
 199               	/* epilogue start */
 109:HIDUINO_MIDI.c **** }
 200               		.loc 2 109 0 is_stmt 1 discriminator 3
 201 0016 0895      		ret
 202               		.cfi_endproc
 203               	.LFE97:
 205               		.section	.text.EVENT_USB_Device_ControlRequest,"ax",@progbits
 206               	.global	EVENT_USB_Device_ControlRequest
 208               	EVENT_USB_Device_ControlRequest:
 209               	.LFB98:
 110:HIDUINO_MIDI.c **** 
 111:HIDUINO_MIDI.c **** // Event handler for the library USB Control Request reception event. */
 112:HIDUINO_MIDI.c **** void EVENT_USB_Device_ControlRequest(void) {
 210               		.loc 2 112 0
 211               		.cfi_startproc
 212               	/* prologue: function */
 213               	/* frame size = 0 */
 214               	/* stack size = 0 */
 215               	.L__stack_usage = 0
 216               	.LVL9:
 217               	/* epilogue start */
 113:HIDUINO_MIDI.c **** 	MIDI_Device_ProcessControlRequest(&MIDI_Interface);
 114:HIDUINO_MIDI.c **** }
 218               		.loc 2 114 0
 219 0000 0895      		ret
 220               		.cfi_endproc
 221               	.LFE98:
 223               		.section	.text.MIDI_IN,"ax",@progbits
 224               	.global	MIDI_IN
 226               	MIDI_IN:
 227               	.LFB99:
 115:HIDUINO_MIDI.c **** 
 116:HIDUINO_MIDI.c **** // MIDI_IN routine. Host -> Arduino.  
 117:HIDUINO_MIDI.c **** void MIDI_IN(void) {
 228               		.loc 2 117 0
 229               		.cfi_startproc
 230 0000 CF93      		push r28
 231               	.LCFI2:
 232               		.cfi_def_cfa_offset 3
 233               		.cfi_offset 28, -2
 234 0002 DF93      		push r29
 235               	.LCFI3:
 236               		.cfi_def_cfa_offset 4
 237               		.cfi_offset 29, -3
 238 0004 00D0      		rcall .
 239 0006 00D0      		rcall .
 240               	.LCFI4:
 241               		.cfi_def_cfa_offset 8
 242 0008 CDB7      		in r28,__SP_L__
 243 000a DEB7      		in r29,__SP_H__
 244               	.LCFI5:
 245               		.cfi_def_cfa_register 28
 246               	/* prologue: function */
 247               	/* frame size = 4 */
 248               	/* stack size = 6 */
 249               	.L__stack_usage = 6
 118:HIDUINO_MIDI.c **** 
 119:HIDUINO_MIDI.c **** 	MIDI_EventPacket_t ReceivedMIDIEvent;
 120:HIDUINO_MIDI.c **** 
 121:HIDUINO_MIDI.c **** 	if (MIDI_Device_ReceiveEventPacket(&MIDI_Interface, &ReceivedMIDIEvent)) {
 250               		.loc 2 121 0
 251 000c 80E0      		ldi r24,lo8(MIDI_Interface)
 252 000e 90E0      		ldi r25,hi8(MIDI_Interface)
 253 0010 BE01      		movw r22,r28
 254 0012 6F5F      		subi r22,lo8(-(1))
 255 0014 7F4F      		sbci r23,hi8(-(1))
 256 0016 0E94 0000 		call MIDI_Device_ReceiveEventPacket
 257 001a 8823      		tst r24
 258 001c 01F0      		breq .L9
 122:HIDUINO_MIDI.c **** 		Serial_TxByte(ReceivedMIDIEvent.Data1);
 259               		.loc 2 122 0
 260 001e 8A81      		ldd r24,Y+2
 261               	.LVL10:
 262               	.L11:
 263               	.LBB31:
 264               	.LBB32:
 110:../../LUFA/Drivers/Peripheral/Serial.h **** 			}
 111:../../LUFA/Drivers/Peripheral/Serial.h **** 
 112:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Turns off the USART driver, disabling and returning used hardware to their default configura
 113:../../LUFA/Drivers/Peripheral/Serial.h **** 			static inline void Serial_ShutDown(void)
 114:../../LUFA/Drivers/Peripheral/Serial.h **** 			{
 115:../../LUFA/Drivers/Peripheral/Serial.h **** 				UCSR1B = 0;
 116:../../LUFA/Drivers/Peripheral/Serial.h **** 				UCSR1A = 0;
 117:../../LUFA/Drivers/Peripheral/Serial.h **** 				UCSR1C = 0;
 118:../../LUFA/Drivers/Peripheral/Serial.h **** 
 119:../../LUFA/Drivers/Peripheral/Serial.h **** 				UBRR1  = 0;
 120:../../LUFA/Drivers/Peripheral/Serial.h **** 
 121:../../LUFA/Drivers/Peripheral/Serial.h **** 				DDRD  &= ~(1 << 3);
 122:../../LUFA/Drivers/Peripheral/Serial.h **** 				PORTD &= ~(1 << 2);
 123:../../LUFA/Drivers/Peripheral/Serial.h **** 			}
 124:../../LUFA/Drivers/Peripheral/Serial.h **** 
 125:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Indicates whether a character has been received through the USART.
 126:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *
 127:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  \return Boolean true if a character has been received, false otherwise.
 128:../../LUFA/Drivers/Peripheral/Serial.h **** 			 */
 129:../../LUFA/Drivers/Peripheral/Serial.h **** 			static inline bool Serial_IsCharReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 130:../../LUFA/Drivers/Peripheral/Serial.h **** 			static inline bool Serial_IsCharReceived(void)
 131:../../LUFA/Drivers/Peripheral/Serial.h **** 			{
 132:../../LUFA/Drivers/Peripheral/Serial.h **** 				return ((UCSR1A & (1 << RXC1)) ? true : false);
 133:../../LUFA/Drivers/Peripheral/Serial.h **** 			}
 134:../../LUFA/Drivers/Peripheral/Serial.h **** 
 135:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Transmits a given byte through the USART.
 136:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *
 137:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  \param[in] DataByte  Byte to transmit through the USART.
 138:../../LUFA/Drivers/Peripheral/Serial.h **** 			 */
 139:../../LUFA/Drivers/Peripheral/Serial.h **** 			static inline void Serial_TxByte(const char DataByte) ATTR_ALWAYS_INLINE;
 140:../../LUFA/Drivers/Peripheral/Serial.h **** 			static inline void Serial_TxByte(const char DataByte)
 141:../../LUFA/Drivers/Peripheral/Serial.h **** 			{
 142:../../LUFA/Drivers/Peripheral/Serial.h **** 				while (!(UCSR1A & (1 << UDRE1)));
 265               		.loc 3 142 0
 266 0020 9091 C800 		lds r25,200
 267 0024 95FF      		sbrs r25,5
 268 0026 00C0      		rjmp .L11
 143:../../LUFA/Drivers/Peripheral/Serial.h **** 				UDR1 = DataByte;
 269               		.loc 3 143 0
 270 0028 8093 CE00 		sts 206,r24
 271               	.LBE32:
 272               	.LBE31:
 123:HIDUINO_MIDI.c **** 		Serial_TxByte(ReceivedMIDIEvent.Data2); 
 273               		.loc 2 123 0
 274 002c 8B81      		ldd r24,Y+3
 275               	.LVL11:
 276               	.L12:
 277               	.LBB33:
 278               	.LBB34:
 142:../../LUFA/Drivers/Peripheral/Serial.h **** 				while (!(UCSR1A & (1 << UDRE1)));
 279               		.loc 3 142 0
 280 002e 9091 C800 		lds r25,200
 281 0032 95FF      		sbrs r25,5
 282 0034 00C0      		rjmp .L12
 283               		.loc 3 143 0
 284 0036 8093 CE00 		sts 206,r24
 285               	.LBE34:
 286               	.LBE33:
 124:HIDUINO_MIDI.c **** 		Serial_TxByte(ReceivedMIDIEvent.Data3); 
 287               		.loc 2 124 0
 288 003a 8C81      		ldd r24,Y+4
 289               	.LVL12:
 290               	.L13:
 291               	.LBB35:
 292               	.LBB36:
 142:../../LUFA/Drivers/Peripheral/Serial.h **** 				while (!(UCSR1A & (1 << UDRE1)));
 293               		.loc 3 142 0
 294 003c 9091 C800 		lds r25,200
 295 0040 95FF      		sbrs r25,5
 296 0042 00C0      		rjmp .L13
 297               		.loc 3 143 0
 298 0044 8093 CE00 		sts 206,r24
 299               	.LVL13:
 300               	.LBE36:
 301               	.LBE35:
 302               	.LBB37:
 303               	.LBB38:
  75:./Board/LEDs.h **** 				PORTD &= ~LEDMask;
 304               		.loc 1 75 0
 305 0048 5C98      		cbi 43-32,4
 306               	.LBE38:
 307               	.LBE37:
 125:HIDUINO_MIDI.c **** 		LEDs_TurnOnLEDs(LEDS_LED2);
 126:HIDUINO_MIDI.c **** 		rx_ticks = 5000; 
 308               		.loc 2 126 0
 309 004a 88E8      		ldi r24,lo8(-120)
 310 004c 8093 0000 		sts rx_ticks,r24
 311               	.LVL14:
 312               	.L9:
 313               	/* epilogue start */
 127:HIDUINO_MIDI.c **** 	}
 128:HIDUINO_MIDI.c **** 	
 129:HIDUINO_MIDI.c **** }
 314               		.loc 2 129 0
 315 0050 0F90      		pop __tmp_reg__
 316 0052 0F90      		pop __tmp_reg__
 317 0054 0F90      		pop __tmp_reg__
 318 0056 0F90      		pop __tmp_reg__
 319 0058 DF91      		pop r29
 320 005a CF91      		pop r28
 321 005c 0895      		ret
 322               		.cfi_endproc
 323               	.LFE99:
 325               		.section	.text.MIDI_OUT,"ax",@progbits
 326               	.global	MIDI_OUT
 328               	MIDI_OUT:
 329               	.LFB100:
 130:HIDUINO_MIDI.c **** 
 131:HIDUINO_MIDI.c **** // MIDI_OUT routine. Arduino -> Host.  
 132:HIDUINO_MIDI.c **** void MIDI_OUT(void) {
 330               		.loc 2 132 0
 331               		.cfi_startproc
 332 0000 CF93      		push r28
 333               	.LCFI6:
 334               		.cfi_def_cfa_offset 3
 335               		.cfi_offset 28, -2
 336 0002 DF93      		push r29
 337               	.LCFI7:
 338               		.cfi_def_cfa_offset 4
 339               		.cfi_offset 29, -3
 340 0004 00D0      		rcall .
 341 0006 00D0      		rcall .
 342               	.LCFI8:
 343               		.cfi_def_cfa_offset 8
 344 0008 CDB7      		in r28,__SP_L__
 345 000a DEB7      		in r29,__SP_H__
 346               	.LCFI9:
 347               		.cfi_def_cfa_register 28
 348               	/* prologue: function */
 349               	/* frame size = 4 */
 350               	/* stack size = 6 */
 351               	.L__stack_usage = 6
 133:HIDUINO_MIDI.c **** 	
 134:HIDUINO_MIDI.c **** 	if (complete == 1) {
 352               		.loc 2 134 0
 353 000c 8091 0000 		lds r24,complete
 354 0010 8130      		cpi r24,lo8(1)
 355 0012 01F4      		brne .L17
 356               	.LBB39:
 135:HIDUINO_MIDI.c **** 		
 136:HIDUINO_MIDI.c **** 		complete = 0;
 357               		.loc 2 136 0
 358 0014 1092 0000 		sts complete,__zero_reg__
 137:HIDUINO_MIDI.c **** 	
 138:HIDUINO_MIDI.c **** 		MIDI_EventPacket_t MIDIEvent = (MIDI_EventPacket_t) {
 139:HIDUINO_MIDI.c **** 			.CableNumber = 0,
 140:HIDUINO_MIDI.c **** 			.Command     = MIDI_FROM_ARDUINO.Data1 >> 4,
 359               		.loc 2 140 0
 360 0018 8091 0000 		lds r24,MIDI_FROM_ARDUINO+1
 138:HIDUINO_MIDI.c **** 		MIDI_EventPacket_t MIDIEvent = (MIDI_EventPacket_t) {
 361               		.loc 2 138 0
 362 001c 982F      		mov r25,r24
 363 001e 9295      		swap r25
 364 0020 9F70      		andi r25,lo8(15)
 365 0022 9983      		std Y+1,r25
 366 0024 8A83      		std Y+2,r24
 367 0026 8091 0000 		lds r24,MIDI_FROM_ARDUINO+2
 368 002a 8B83      		std Y+3,r24
 369 002c 8091 0000 		lds r24,MIDI_FROM_ARDUINO+3
 370 0030 8C83      		std Y+4,r24
 141:HIDUINO_MIDI.c **** 			.Data1       = MIDI_FROM_ARDUINO.Data1, 
 142:HIDUINO_MIDI.c **** 			.Data2       = MIDI_FROM_ARDUINO.Data2, 
 143:HIDUINO_MIDI.c **** 			.Data3       = MIDI_FROM_ARDUINO.Data3,		
 144:HIDUINO_MIDI.c **** 		};
 145:HIDUINO_MIDI.c **** 		
 146:HIDUINO_MIDI.c **** 		
 147:HIDUINO_MIDI.c **** 		MIDI_Device_SendEventPacket(&MIDI_Interface, &MIDIEvent);
 371               		.loc 2 147 0
 372 0032 80E0      		ldi r24,lo8(MIDI_Interface)
 373 0034 90E0      		ldi r25,hi8(MIDI_Interface)
 374 0036 BE01      		movw r22,r28
 375 0038 6F5F      		subi r22,lo8(-(1))
 376 003a 7F4F      		sbci r23,hi8(-(1))
 377 003c 0E94 0000 		call MIDI_Device_SendEventPacket
 148:HIDUINO_MIDI.c **** 		MIDI_Device_Flush(&MIDI_Interface);
 378               		.loc 2 148 0
 379 0040 80E0      		ldi r24,lo8(MIDI_Interface)
 380 0042 90E0      		ldi r25,hi8(MIDI_Interface)
 381 0044 0E94 0000 		call MIDI_Device_Flush
 382               	.LVL15:
 383               	.LBB40:
 384               	.LBB41:
  75:./Board/LEDs.h **** 				PORTD &= ~LEDMask;
 385               		.loc 1 75 0
 386 0048 5D98      		cbi 43-32,5
 387               	.LBE41:
 388               	.LBE40:
 149:HIDUINO_MIDI.c **** 		
 150:HIDUINO_MIDI.c **** 		LEDs_TurnOnLEDs(LEDS_LED1);
 151:HIDUINO_MIDI.c **** 		tx_ticks = 5000; 
 389               		.loc 2 151 0
 390 004a 88E8      		ldi r24,lo8(-120)
 391 004c 8093 0000 		sts tx_ticks,r24
 392               	.LVL16:
 393               	.L17:
 394               	/* epilogue start */
 395               	.LBE39:
 152:HIDUINO_MIDI.c **** 
 153:HIDUINO_MIDI.c **** 	}
 154:HIDUINO_MIDI.c **** 	
 155:HIDUINO_MIDI.c **** 	
 156:HIDUINO_MIDI.c **** }
 396               		.loc 2 156 0
 397 0050 0F90      		pop __tmp_reg__
 398 0052 0F90      		pop __tmp_reg__
 399 0054 0F90      		pop __tmp_reg__
 400 0056 0F90      		pop __tmp_reg__
 401 0058 DF91      		pop r29
 402 005a CF91      		pop r28
 403 005c 0895      		ret
 404               		.cfi_endproc
 405               	.LFE100:
 407               		.section	.text.startup.main,"ax",@progbits
 408               	.global	main
 410               	main:
 411               	.LFB93:
  39:HIDUINO_MIDI.c **** int main(void) {
 412               		.loc 2 39 0
 413               		.cfi_startproc
 414               	/* prologue: function */
 415               	/* frame size = 0 */
 416               	/* stack size = 0 */
 417               	.L__stack_usage = 0
 418               	.LVL17:
 419               	.LBB42:
 420               	.LBB43:
  80:./Board/LEDs.h **** 				PORTD |= LEDMask;
 421               		.loc 1 80 0
 422 0000 5D9A      		sbi 43-32,5
 423               	.LVL18:
 424               	.LBE43:
 425               	.LBE42:
 426               	.LBB44:
 427               	.LBB45:
 428 0002 5C9A      		sbi 43-32,4
 429               	.LBE45:
 430               	.LBE44:
  44:HIDUINO_MIDI.c **** 	SetupHardware();
 431               		.loc 2 44 0
 432 0004 0E94 0000 		call SetupHardware
  46:HIDUINO_MIDI.c **** 	sei();
 433               		.loc 2 46 0
 434               	/* #APP */
 435               	 ;  46 "HIDUINO_MIDI.c" 1
 436 0008 7894      		sei
 437               	 ;  0 "" 2
 438               	/* #NOAPP */
 439               	.L24:
  50:HIDUINO_MIDI.c **** 		if (tx_ticks) 
 440               		.loc 2 50 0
 441 000a 8091 0000 		lds r24,tx_ticks
 442 000e 8823      		tst r24
 443 0010 01F0      		breq .L20
  51:HIDUINO_MIDI.c **** 			tx_ticks--;
 444               		.loc 2 51 0
 445 0012 8150      		subi r24,lo8(-(-1))
 446 0014 8093 0000 		sts tx_ticks,r24
 447 0018 00C0      		rjmp .L21
 448               	.L20:
 449               	.LVL19:
 450               	.LBB46:
 451               	.LBB47:
  80:./Board/LEDs.h **** 				PORTD |= LEDMask;
 452               		.loc 1 80 0
 453 001a 5D9A      		sbi 43-32,5
 454               	.LVL20:
 455               	.L21:
 456               	.LBE47:
 457               	.LBE46:
  55:HIDUINO_MIDI.c **** 		if (rx_ticks) 
 458               		.loc 2 55 0
 459 001c 8091 0000 		lds r24,rx_ticks
 460 0020 8823      		tst r24
 461 0022 01F0      		breq .L22
  56:HIDUINO_MIDI.c **** 			rx_ticks--;
 462               		.loc 2 56 0
 463 0024 8150      		subi r24,lo8(-(-1))
 464 0026 8093 0000 		sts rx_ticks,r24
 465 002a 00C0      		rjmp .L23
 466               	.L22:
 467               	.LVL21:
 468               	.LBB48:
 469               	.LBB49:
  80:./Board/LEDs.h **** 				PORTD |= LEDMask;
 470               		.loc 1 80 0
 471 002c 5C9A      		sbi 43-32,4
 472               	.LVL22:
 473               	.L23:
 474               	.LBE49:
 475               	.LBE48:
  60:HIDUINO_MIDI.c **** 		MIDI_IN();
 476               		.loc 2 60 0
 477 002e 0E94 0000 		call MIDI_IN
  61:HIDUINO_MIDI.c **** 		MIDI_OUT(); 
 478               		.loc 2 61 0
 479 0032 0E94 0000 		call MIDI_OUT
  63:HIDUINO_MIDI.c **** 		MIDI_Device_USBTask(&MIDI_Interface);
 480               		.loc 2 63 0
 481 0036 80E0      		ldi r24,lo8(MIDI_Interface)
 482 0038 90E0      		ldi r25,hi8(MIDI_Interface)
 483 003a 0E94 0000 		call MIDI_Device_USBTask
  64:HIDUINO_MIDI.c **** 		USB_USBTask();
 484               		.loc 2 64 0
 485 003e 0E94 0000 		call USB_USBTask
  66:HIDUINO_MIDI.c **** 	}
 486               		.loc 2 66 0
 487 0042 00C0      		rjmp .L24
 488               		.cfi_endproc
 489               	.LFE93:
 491               		.section	.text.__vector_23,"ax",@progbits
 492               	.global	__vector_23
 494               	__vector_23:
 495               	.LFB101:
 157:HIDUINO_MIDI.c **** 
 158:HIDUINO_MIDI.c **** // Interrupt helper for MIDI_OUT. 
 159:HIDUINO_MIDI.c **** ISR(USART1_RX_vect, ISR_BLOCK) {
 496               		.loc 2 159 0
 497               		.cfi_startproc
 498 0000 1F92      		push r1
 499               	.LCFI10:
 500               		.cfi_def_cfa_offset 3
 501               		.cfi_offset 1, -2
 502 0002 0F92      		push r0
 503               	.LCFI11:
 504               		.cfi_def_cfa_offset 4
 505               		.cfi_offset 0, -3
 506 0004 0FB6      		in r0,__SREG__
 507 0006 0F92      		push r0
 508 0008 1124      		clr __zero_reg__
 509 000a 8F93      		push r24
 510               	.LCFI12:
 511               		.cfi_def_cfa_offset 5
 512               		.cfi_offset 24, -4
 513 000c 9F93      		push r25
 514               	.LCFI13:
 515               		.cfi_def_cfa_offset 6
 516               		.cfi_offset 25, -5
 517               	/* prologue: Signal */
 518               	/* frame size = 0 */
 519               	/* stack size = 5 */
 520               	.L__stack_usage = 5
 160:HIDUINO_MIDI.c **** 	
 161:HIDUINO_MIDI.c **** 	uint8_t ReceivedByte = UDR1;
 521               		.loc 2 161 0
 522 000e 8091 CE00 		lds r24,206
 523               	.LVL23:
 162:HIDUINO_MIDI.c **** 			
 163:HIDUINO_MIDI.c **** 	// Naieve MIDI parser. TODO: full MIDI protocol support. 
 164:HIDUINO_MIDI.c **** 	if (USB_DeviceState == DEVICE_STATE_Configured) {
 524               		.loc 2 164 0
 525 0012 9091 0000 		lds r25,USB_DeviceState
 526 0016 9430      		cpi r25,lo8(4)
 527 0018 01F4      		brne .L25
 165:HIDUINO_MIDI.c **** 	
 166:HIDUINO_MIDI.c **** 		if ( (ReceivedByte >> 7 ) == 1 ) {
 528               		.loc 2 166 0
 529 001a 87FF      		sbrs r24,7
 530 001c 00C0      		rjmp .L27
 167:HIDUINO_MIDI.c **** 			dCount = 0; 
 531               		.loc 2 167 0
 532 001e 1092 0000 		sts dCount,__zero_reg__
 168:HIDUINO_MIDI.c **** 			memset(&MIDI_FROM_ARDUINO, 0, sizeof(MIDI_EventPacket_t));
 533               		.loc 2 168 0
 534 0022 1092 0000 		sts MIDI_FROM_ARDUINO,__zero_reg__
 535 0026 1092 0000 		sts MIDI_FROM_ARDUINO+1,__zero_reg__
 536 002a 1092 0000 		sts MIDI_FROM_ARDUINO+2,__zero_reg__
 537 002e 1092 0000 		sts MIDI_FROM_ARDUINO+3,__zero_reg__
 169:HIDUINO_MIDI.c **** 			MIDI_FROM_ARDUINO.Data1 = ReceivedByte;
 538               		.loc 2 169 0
 539 0032 8093 0000 		sts MIDI_FROM_ARDUINO+1,r24
 540 0036 00C0      		rjmp .L25
 541               	.L27:
 170:HIDUINO_MIDI.c **** 		}
 171:HIDUINO_MIDI.c **** 			
 172:HIDUINO_MIDI.c **** 		else if ( ((ReceivedByte >> 7) == 0) && (dCount == 0) ) {
 542               		.loc 2 172 0
 543 0038 87FD      		sbrc r24,7
 544 003a 00C0      		rjmp .L25
 545               		.loc 2 172 0 is_stmt 0 discriminator 1
 546 003c 9091 0000 		lds r25,dCount
 547 0040 9923      		tst r25
 548 0042 01F4      		brne .L28
 173:HIDUINO_MIDI.c **** 			dCount = 1; 
 549               		.loc 2 173 0 is_stmt 1
 550 0044 91E0      		ldi r25,lo8(1)
 551 0046 9093 0000 		sts dCount,r25
 174:HIDUINO_MIDI.c **** 			MIDI_FROM_ARDUINO.Data2 = ReceivedByte;
 552               		.loc 2 174 0
 553 004a 8093 0000 		sts MIDI_FROM_ARDUINO+2,r24
 554 004e 00C0      		rjmp .L25
 555               	.L28:
 175:HIDUINO_MIDI.c **** 		}
 176:HIDUINO_MIDI.c **** 		
 177:HIDUINO_MIDI.c **** 		else if ( ((ReceivedByte >> 7) == 0) && (dCount == 1) ) {
 556               		.loc 2 177 0 discriminator 1
 557 0050 9091 0000 		lds r25,dCount
 558 0054 9130      		cpi r25,lo8(1)
 559 0056 01F4      		brne .L25
 178:HIDUINO_MIDI.c **** 			dCount = 0; 
 560               		.loc 2 178 0
 561 0058 1092 0000 		sts dCount,__zero_reg__
 179:HIDUINO_MIDI.c **** 			MIDI_FROM_ARDUINO.Data3 = ReceivedByte;
 562               		.loc 2 179 0
 563 005c 8093 0000 		sts MIDI_FROM_ARDUINO+3,r24
 180:HIDUINO_MIDI.c **** 			complete = 1;
 564               		.loc 2 180 0
 565 0060 9093 0000 		sts complete,r25
 566               	.L25:
 567               	/* epilogue start */
 181:HIDUINO_MIDI.c **** 		}
 182:HIDUINO_MIDI.c **** 		
 183:HIDUINO_MIDI.c **** 	}
 184:HIDUINO_MIDI.c **** 	
 185:HIDUINO_MIDI.c **** }...
 568               		.loc 2 185 0
 569 0064 9F91      		pop r25
 570 0066 8F91      		pop r24
 571               	.LVL24:
 572 0068 0F90      		pop r0
 573 006a 0FBE      		out __SREG__,r0
 574 006c 0F90      		pop r0
 575 006e 1F90      		pop r1
 576 0070 1895      		reti
 577               		.cfi_endproc
 578               	.LFE101:
 580               	.global	MIDI_Interface
 581               		.data
 584               	MIDI_Interface:
 585 0000 01        		.byte	1
 586 0001 02        		.byte	2
 587 0002 4000      		.word	64
 588 0004 00        		.byte	0
 589 0005 01        		.byte	1
 590 0006 4000      		.word	64
 591 0008 00        		.byte	0
 592               	.global	rx_ticks
 593               	.global	rx_ticks
 594               		.section .bss
 597               	rx_ticks:
 598 0000 00        		.skip 1,0
 599               	.global	tx_ticks
 600               	.global	tx_ticks
 603               	tx_ticks:
 604 0001 00        		.skip 1,0
 605               	.global	complete
 606               	.global	complete
 609               	complete:
 610 0002 00        		.skip 1,0
 611               	.global	dCount
 612               	.global	dCount
 615               	dCount:
 616 0003 00        		.skip 1,0
 617               		.comm MIDI_FROM_ARDUINO,4,1
 618               		.text
 619               	.Letext0:
 620               		.file 4 "/usr/local/CrossPack-AVR-20121207/lib/gcc/avr/4.6.2/../../../../avr/include/stdint.h"
 621               		.file 5 "../../LUFA/Drivers/USB/Class/Device/../Common/MIDI.h"
 622               		.file 6 "../../LUFA/Drivers/USB/Class/Device/MIDI.h"
 623               		.file 7 "../../LUFA/Drivers/USB/HighLevel/USBTask.h"
 624               		.file 8 "../../LUFA/Drivers/USB/HighLevel/../LowLevel/Device.h"
DEFINED SYMBOLS
                            *ABS*:00000000 HIDUINO_MIDI.c
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:2      *ABS*:0000003f __SREG__
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:3      *ABS*:0000003e __SP_H__
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:4      *ABS*:0000003d __SP_L__
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:5      *ABS*:00000034 __CCP__
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:6      *ABS*:00000000 __tmp_reg__
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:7      *ABS*:00000001 __zero_reg__
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:15     .text.LEDs_SetAllLEDs:00000000 LEDs_SetAllLEDs
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:42     .text.SetupHardware:00000000 SetupHardware
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:132    .text.EVENT_USB_Device_Connect:00000000 EVENT_USB_Device_Connect
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:152    .text.EVENT_USB_Device_Disconnect:00000000 EVENT_USB_Device_Disconnect
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:172    .text.EVENT_USB_Device_ConfigurationChanged:00000000 EVENT_USB_Device_ConfigurationChanged
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:584    .data:00000000 MIDI_Interface
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:208    .text.EVENT_USB_Device_ControlRequest:00000000 EVENT_USB_Device_ControlRequest
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:226    .text.MIDI_IN:00000000 MIDI_IN
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:597    .bss:00000000 rx_ticks
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:328    .text.MIDI_OUT:00000000 MIDI_OUT
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:609    .bss:00000002 complete
                            *COM*:00000004 MIDI_FROM_ARDUINO
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:603    .bss:00000001 tx_ticks
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:410    .text.startup.main:00000000 main
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:494    .text.__vector_23:00000000 __vector_23
/var/folders/dl/0_5hknqx56n0c730gn4r0jw80000gn/T//ccY0WdmK.s:615    .bss:00000003 dCount

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
USB_Init
MIDI_Device_ConfigureEndpoints
MIDI_Device_ReceiveEventPacket
MIDI_Device_SendEventPacket
MIDI_Device_Flush
MIDI_Device_USBTask
USB_USBTask
USB_DeviceState
